# -*- sh -*-
# This file can be included with #SCRIPTSCOMMON#
# Thanks to the openldap debian package for this
# method!

set -e

# Uncomment this for loads of debugging
set -x

args=("$@")



##################################################
# INSTALLATION: 1) Configuration
##################################################

# Fetches known configuration and sets variables
kalite_get_config()
{
    # This function exports variables of the configuration

    # Create user for ka-lite if it doesn't exist
    db_get ka-lite/user
    export KALITE_USER="$RET"
    
    # Clear existing assessment items if chosen
    db_get ka-lite/download-assessment-items-clear
    [ "$RET" = "true" ] && export CLEAR_ASSESSMENT_ITEMS=true || export CLEAR_ASSESSMENT_ITEMS=false
    
    # Download assessment items if chosen
    db_get ka-lite/download-assessment-items
    [ "$RET" = "true" ] && export DOWNLOAD_ASSESSMENT_ITEMS=true || export DOWNLOAD_ASSESSMENT_ITEMS=false
    
    # Where to download from
    db_get ka-lite/download-assessment-items-url
    export DOWNLOAD_ASSESSMENT_URL="${RET}"

    # Where to store tmp data while downloading
    db_get ka-lite/download-assessment-items-tmp
    export DOWNLOAD_ASSESSMENT_TMP="${RET}"

    # Where to download from
    db_get ka-lite/assessment-items-dir
    export ASSESSMENT_DIR="${RET}"

    # Custom setup.py for the user
    db_get ka-lite/kalite-setup
    export SETUP_PY="${RET}"

    # Enable init.d script
    db_get ka-lite/init
    [ "$RET" = "true" ] && export ENABLE_INIT_D=true || export ENABLE_INIT_D=false

}

# Ask the users questions
kalite_debconf_ask()
{
  
    kalite_get_config
    
    db_settitle ka-lite/window-title

    # Run as system script?
    db_input high ka-lite/init || true
    
    # Which user should run the script?
    KALITE_USER=""
    while [ "$KALITE_USER" = "" ]; do
      db_input critical ka-lite/user || true
      db_go || true
      db_get ka-lite/user
      KALITE_USER=$RET
    done

    # Give init.d instructions
    db_get ka-lite/init
    if [ "$RET" = "true" ]
    then
        db_input high ka-lite/init-instructions || true
    else
        db_input high ka-lite/manual-instructions || true
    fi

}


# Configures the package from the debconf
# DOES NOT ASK ANY QUESTIONS
kalite_configure()
{

    kalite_get_config
    
    major_version=echo "$2" | sed 's/\([0-9]*\.[0-9]*\).*/\1/'
    
    # User setup
    echo $KALITE_USER > /etc/ka-lite/username
    if ! getent passwd $KALITE_USER >/dev/null
    then
        adduser --system --home /var/$KALITE_USER $KALITE_USER
    fi
    
    # Do we have string defined for setup.py?
    if ! [ "$SETUP_PY" = "" ]
    then
        USER_CONFIG_DIR=`su -s /bin/sh $KALITE_USER -c "echo \\$HOME"`/.kalite
        mkdir -p "$USER_CONFIG_DIR"
        USER_CONFIG="$USER_CONFIG_DIR/settings.py"
        touch "$USER_CONFIG"
        echo "Changing user config to use package pre-defined settings: $USER_CONFIG"
        echo "$SETUP_PY" > $USER_CONFIG
    fi
    
    # Assessment items
    mkdir -p $ASSESSMENT_DIR
    
    # If user has chosen assessment items...
    if $DOWNLOAD_ASSESSMENT_ITEMS
    then
        
        # Check if file system resource or downloadable
        if [ `echo "$DOWNLOAD_ASSESSMENT_URL" | grep "^file://"` ]
        then
            # It is a filesystem location
            local_path=`echo "$DOWNLOAD_ASSESSMENT_URL" | sed 's/file:\/\///'`
            delete_after=false
        else
            local_path=$DOWNLOAD_ASSESSMENT_TMP/assessment_items.zip
            wget "$DOWNLOAD_ASSESSMENT_URL" -O $local_path --retry-connrefused --read-timeout=20 --waitretry=1 -t 200 --continue
            delete_after=true            
        fi
        
        # Unzip resource into configured location
        unzip -q $local_path -d $ASSESSMENT_DIR
        
        # Delete downloaded resourece?
        if $delete_after
        then
            rm -f $local_path
        fi
        
        # Necessary because assessment.zip has wrong permissions
        chmod -R uog+r $ASSESSMENT_DIR
    fi

    # TODO: This is a stupid hack, if the user running KA Lite has to own this
    # file, then it should not be in this location.
    if [ -f $ASSESSMENT_DIR/assessmentitems.sqlite ]
    then
        chown $KALITE_USER $ASSESSMENT_DIR
        chown $KALITE_USER $ASSESSMENT_DIR/assessmentitems.sqlite
    fi

    if [ "${RET}" != "false" ]
    then
        version_file=$ASSESSMENT_DIR/assessmentitems.version
        if [ -f $version_file ]
        then
            old_version="`cat $version_file`"
        else
            old_version=""
        fi
        if [ "$old_version" != "0.14" ]
        then
            mkdir -p $ASSESSMENT_DIR
        else
            echo "Assessment items already installed"
        fi
    fi

    # Install init script using `ucf` no matter what, users might activate it later
    ucf --debconf-ok /usr/share/kalite/init-service /etc/init.d/ka-lite

    # Necesary in 15.04+ because it doesn't preserve permissions
    chmod +x /etc/init.d/ka-lite

    if $ENABLE_INIT_D
    then
        # Register init script as service
        update-rc.d ka-lite defaults

        # Start service -- nevermind if it fails
        invoke-rc.d ka-lite start || true
    fi

}


kalite_purge()
{
  
    # Remove assessment items since they might be overwritten by other packages
    rm -rf /usr/share/kalite/assessment

    # Source debconf library.
    . /usr/share/debconf/confmodule
    # Remove my changes to the db.
    db_purge

    # Remove service file using `ucf` (checking whether `ucf` is still available first)
    if type ucf >/dev/null 2>&1;
    then
        ucf --purge "/etc/init.d/ka-lite"
    fi

    # Remove service file by hand (in case the above failed somehow)
    rm -f "/etc/init.d/ka-lite"

}


kalite_preinst()
{
    # Remove pyc files from previous installations
    if [ -d usr/share/kalite/python-packages ]
    then
        find /usr/share/kalite/python-packages -name '*pyc' -exec rm {} \;
    fi
    if [ -d usr/share/kalite/dist-packages ]
    then
        find /usr/share/kalite/dist-packages -name '*pyc' -exec rm {} \;
    fi

    # Ask for user name, default is ka-lite
    if ! [ "$SUDO_USER" = "" ]
    then
        echo "ka-lite ka-lite/user select $SUDO_USER" | debconf-set-selections
        echo "ka-lite ka-lite/user seen false" | debconf-set-selections
    fi
}



# Helpful knowledge

# env for prerm
# SUDO_GID=1000 MAIL=/var/mail/root LANGUAGE=en_US:en USER=root HOME=/home/user LC_CTYPE=en_US.UTF-8 COLORTERM=gnome-terminal DPKG_MAINTSCRIPT_ARCH=amd64 SUDO_UID=1000 LOGNAME=root DPKG_RUNNING_VERSION=1.17.5 DPKG_MAINTSCRIPT_NAME=prerm TERM=xterm USERNAME=root PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DISPLAY=:0 LANG=en_US.UTF-8 DPKG_MAINTSCRIPT_PACKAGE=test1 XAUTHORITY=/home/user/.Xauthority SUDO_COMMAND=/usr/bin/dpkg -i ../test1_1.0-1_amd64.deb SHELL=/bin/bash SUDO_USER=user DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT=1 DPKG_ADMINDIR=/var/lib/dpkg PWD=/

# args for prerm
# upgrade 1.0-1

# env for upgrade, preinst
# SUDO_GID=1000 MAIL=/var/mail/root LANGUAGE=en_US:en USER=root HOME=/home/user LC_CTYPE=en_US.UTF-8 COLORTERM=gnome-terminal DPKG_MAINTSCRIPT_ARCH=amd64 SUDO_UID=1000 LOGNAME=root DPKG_RUNNING_VERSION=1.17.5 DPKG_MAINTSCRIPT_NAME=preinst TERM=xterm USERNAME=root PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DISPLAY=:0 LANG=en_US.UTF-8 DPKG_MAINTSCRIPT_PACKAGE=test1 XAUTHORITY=/home/user/.Xauthority SUDO_COMMAND=/usr/bin/dpkg -i ../test1_1.0-1_amd64.deb SHELL=/bin/bash SUDO_USER=user DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT=1 DPKG_ADMINDIR=/var/lib/dpkg PWD=/

# args for preinst
# upgrade 1.0-1

# env for postinst
# SUDO_GID=1000 MAIL=/var/mail/root LANGUAGE=en_US:en USER=root HOME=/home/user LC_CTYPE=en_US.UTF-8 COLORTERM=gnome-terminal DPKG_MAINTSCRIPT_ARCH=amd64 SUDO_UID=1000 LOGNAME=root DPKG_RUNNING_VERSION=1.17.5 DPKG_MAINTSCRIPT_NAME=postinst TERM=xterm USERNAME=root PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DISPLAY=:0 LANG=en_US.UTF-8 DPKG_MAINTSCRIPT_PACKAGE=test1 XAUTHORITY=/home/user/.Xauthority SUDO_COMMAND=/usr/bin/dpkg -i ../test1_1.0-1_amd64.deb SHELL=/bin/bash SUDO_USER=user DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT=1 DPKG_ADMINDIR=/var/lib/dpkg PWD=/

# args for postinst
# configure 1.0-1

